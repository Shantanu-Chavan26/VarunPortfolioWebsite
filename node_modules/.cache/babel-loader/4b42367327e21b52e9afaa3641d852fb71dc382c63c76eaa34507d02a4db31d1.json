{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shan\\\\Desktop\\\\Portfolio\\\\ShantanuPortfolio\\\\src\\\\components\\\\work\\\\Works.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { projectsData } from \"./Data\";\nimport { projectsNav } from \"./Data\";\nimport WorkItems from \"./WorkItems\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Works = () => {\n  _s();\n  const [item, setItem] = useState({\n    name: \"all\"\n  });\n  const [projects, setProjects] = useState([]);\n  const [active, setActive] = useState(0);\n  useEffect(() => {\n    if (item.name == \"all\") {\n      setProjects(projectsData);\n    } else {\n      const newProjects = projectsData.filter(project => {\n        return project.category.includes(item.name);\n      });\n      setProjects(newProjects);\n    }\n  }, [item]);\n  const handleClick = (e, index) => {\n    setItem({\n      name: e.target.textContent\n    });\n    setActive(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work__filters\",\n      children: projectsNav.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: e => {\n            handleClick(e, index);\n          },\n          className: `${active === index ? \"active-work\" : \"\"} work__item`,\n          children: item.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work__container container grid\",\n      children: projects.map(item => {\n        return /*#__PURE__*/_jsxDEV(WorkItems, {\n          item: item,\n          deploymentLink: item.deploymentLink,\n          demoLink: item.demoLink\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Works, \"RDfNlG8mJnbc4U5h8vCvotiVTnk=\");\n_c = Works;\nexport default Works;\nvar _c;\n$RefreshReg$(_c, \"Works\");","map":{"version":3,"names":["React","useEffect","useState","projectsData","projectsNav","WorkItems","Works","item","setItem","name","projects","setProjects","active","setActive","newProjects","filter","project","category","includes","handleClick","e","index","target","textContent","map","deploymentLink","demoLink","id"],"sources":["C:/Users/Shan/Desktop/Portfolio/ShantanuPortfolio/src/components/work/Works.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { projectsData } from \"./Data\";\r\nimport { projectsNav } from \"./Data\";\r\nimport WorkItems from \"./WorkItems\";\r\n\r\nconst Works = () => {\r\n  const [item, setItem] = useState({ name: \"all\" });\r\n  const [projects, setProjects] = useState([]);\r\n  const [active, setActive] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (item.name == \"all\") {\r\n      setProjects(projectsData);\r\n    } else {\r\n      const newProjects = projectsData.filter((project) => {\r\n        return (project.category).includes(item.name);\r\n      });\r\n      setProjects(newProjects);\r\n    }\r\n  }, [item]);\r\n\r\n  const handleClick = (e, index)=>{\r\n    setItem({name: e.target.textContent});\r\n    setActive(index);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"work__filters\">\r\n        {projectsNav.map((item, index) => {\r\n          return (\r\n            <span\r\n              onClick={(e) => {\r\n                handleClick(e, index);\r\n              }}\r\n              className={`${active === index ? \"active-work\" : \"\"} work__item`}\r\n              key={index}\r\n            >\r\n              {item.name}\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"work__container container grid\">\r\n        {projects.map((item) => {\r\n          return (\r\n            <WorkItems\r\n              item={item}\r\n              key={item.id}\r\n              deploymentLink={item.deploymentLink}\r\n              demoLink={item.demoLink}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Works;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,QAAQ;AACrC,SAASC,WAAW,QAAQ,QAAQ;AACpC,OAAOC,SAAS,MAAM,aAAa;AAAC;AAEpC,MAAMC,KAAK,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC;IAAEO,IAAI,EAAE;EAAM,CAAC,CAAC;EACjD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEvCD,SAAS,CAAC,MAAM;IACd,IAAIM,IAAI,CAACE,IAAI,IAAI,KAAK,EAAE;MACtBE,WAAW,CAACR,YAAY,CAAC;IAC3B,CAAC,MAAM;MACL,MAAMW,WAAW,GAAGX,YAAY,CAACY,MAAM,CAAEC,OAAO,IAAK;QACnD,OAAQA,OAAO,CAACC,QAAQ,CAAEC,QAAQ,CAACX,IAAI,CAACE,IAAI,CAAC;MAC/C,CAAC,CAAC;MACFE,WAAW,CAACG,WAAW,CAAC;IAC1B;EACF,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;EAEV,MAAMY,WAAW,GAAG,CAACC,CAAC,EAAEC,KAAK,KAAG;IAC9Bb,OAAO,CAAC;MAACC,IAAI,EAAEW,CAAC,CAACE,MAAM,CAACC;IAAW,CAAC,CAAC;IACrCV,SAAS,CAACQ,KAAK,CAAC;EAClB,CAAC;EAED,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,eAAe;MAAA,UAC3BjB,WAAW,CAACoB,GAAG,CAAC,CAACjB,IAAI,EAAEc,KAAK,KAAK;QAChC,oBACE;UACE,OAAO,EAAGD,CAAC,IAAK;YACdD,WAAW,CAACC,CAAC,EAAEC,KAAK,CAAC;UACvB,CAAE;UACF,SAAS,EAAG,GAAET,MAAM,KAAKS,KAAK,GAAG,aAAa,GAAG,EAAG,aAAa;UAAA,UAGhEd,IAAI,CAACE;QAAI,GAFLY,KAAK;UAAA;UAAA;UAAA;QAAA,QAGL;MAEX,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACE,eACN;MAAK,SAAS,EAAC,gCAAgC;MAAA,UAC5CX,QAAQ,CAACc,GAAG,CAAEjB,IAAI,IAAK;QACtB,oBACE,QAAC,SAAS;UACR,IAAI,EAAEA,IAAK;UAEX,cAAc,EAAEA,IAAI,CAACkB,cAAe;UACpC,QAAQ,EAAElB,IAAI,CAACmB;QAAS,GAFnBnB,IAAI,CAACoB,EAAE;UAAA;UAAA;UAAA;QAAA,QAGZ;MAEN,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GApDIrB,KAAK;AAAA,KAALA,KAAK;AAsDX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}